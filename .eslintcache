[{"C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\index.js":"1","C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\reportWebVitals.js":"2","C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\App.js":"3","C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\pages\\Signin.jsx":"4","C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\pages\\Signup.jsx":"5","C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\pages\\Admin.jsx":"6","C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\pages\\Dashboard.jsx":"7","C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\pages\\Home.jsx":"8","C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\pages\\AddNews.jsx":"9","C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\pages\\Deletenews.jsx":"10","C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\pages\\UserManagement.jsx":"11","C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\reuseableComponent\\Header.jsx":"12","C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\reuseableComponent\\InputField.jsx":"13","C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\reuseableComponent\\Password.jsx":"14","C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\reuseableComponent\\Button.jsx":"15","C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\reuseableComponent\\UsersInfoTable.jsx":"16","C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\reuseableComponent\\DeleteTable.jsx":"17"},{"size":517,"mtime":1616500044002,"results":"18","hashOfConfig":"19"},{"size":375,"mtime":1616500044070,"results":"20","hashOfConfig":"19"},{"size":2026,"mtime":1616516224193,"results":"21","hashOfConfig":"19"},{"size":2130,"mtime":1616500044033,"results":"22","hashOfConfig":"19"},{"size":3208,"mtime":1616500044060,"results":"23","hashOfConfig":"19"},{"size":2256,"mtime":1616500044016,"results":"24","hashOfConfig":"19"},{"size":7525,"mtime":1618144058687,"results":"25","hashOfConfig":"19"},{"size":171,"mtime":1616500044030,"results":"26","hashOfConfig":"19"},{"size":10245,"mtime":1618149839323,"results":"27","hashOfConfig":"19"},{"size":6703,"mtime":1617778173616,"results":"28","hashOfConfig":"19"},{"size":6753,"mtime":1617777832565,"results":"29","hashOfConfig":"19"},{"size":177,"mtime":1616500044078,"results":"30","hashOfConfig":"19"},{"size":848,"mtime":1616500044083,"results":"31","hashOfConfig":"19"},{"size":638,"mtime":1616500044087,"results":"32","hashOfConfig":"19"},{"size":268,"mtime":1616500044074,"results":"33","hashOfConfig":"19"},{"size":11317,"mtime":1617777960706,"results":"34","hashOfConfig":"19"},{"size":11179,"mtime":1617783605527,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"ujon96",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\index.js",[],["76","77"],"C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\reportWebVitals.js",[],"C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\App.js",[],"C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\pages\\Signin.jsx",[],"C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\pages\\Signup.jsx",[],"C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\pages\\Admin.jsx",[],"C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\pages\\Dashboard.jsx",["78"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport { BrowserRouter as Router, Link, withRouter } from \"react-router-dom\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport '../pages/style.css'\r\n\r\n\r\nconst drawerWidth = 240;\r\nconst icons = [\r\n    <HomeIcon />,\r\n    <AddBoxIcon />,\r\n    <DeleteIcon />,\r\n    <PersonIcon />\r\n]\r\n\r\nconst routes = ['/admin/dashboard', '/admin/addnews', '/admin/deletenews', '/admin/usermanagement'];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n        color: theme.palette.text.primary\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n}));\r\n\r\nfunction Dashboard({ history }) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n\r\n\r\n        <div className={classes.root}>\r\n            <Router>\r\n                <CssBaseline />\r\n                <div className='flex-container'>\r\n                <AppBar\r\n                    position=\"fixed\"\r\n                    className={clsx(classes.appBar, {\r\n                        [classes.appBarShift]: open,\r\n                    })}\r\n                >\r\n                    \r\n                        <Toolbar>\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"open drawer\"\r\n                                onClick={handleDrawerOpen}\r\n                                edge=\"start\"\r\n                                className={clsx(classes.menuButton, open && classes.hide)}\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                            <div className='item-1'>\r\n                                <Typography variant=\"h6\" noWrap>\r\n                                    Admin Dashboard\r\n                        </Typography>\r\n                            </div>\r\n\r\n                            <div className='item-2'>\r\n                      \r\n                                <IconButton>\r\n                                    <Avatar src=\"/broken-image.jpg\" />\r\n                                    \r\n                                </IconButton>\r\n                            </div>\r\n\r\n                            <div className='item-3'>\r\n                                <Button color=\"inherit\">Logout</Button>\r\n                            </div>\r\n\r\n\r\n                        </Toolbar>\r\n                   \r\n                </AppBar>\r\n                </div>\r\n\r\n\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <div className={classes.drawerHeader}>\r\n                        <IconButton onClick={handleDrawerClose}>\r\n                            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <List>\r\n                        <ListItem button key={0} onClick={() => history.push(routes[0])}>\r\n                            <ListItemIcon>{icons[0]}</ListItemIcon>\r\n                            <ListItemText primary={\"Home\"} />\r\n                        </ListItem>\r\n                        <ListItem button key={1} onClick={() => history.push(routes[1])}>\r\n                            <ListItemIcon>{icons[1]}</ListItemIcon>\r\n                            <ListItemText primary={\"Add News\"} />\r\n                        </ListItem>\r\n                        <ListItem button key={2} onClick={() => history.push(routes[2])}>\r\n                            <ListItemIcon>{icons[2]}</ListItemIcon>\r\n                            <ListItemText primary={\"Delete News\"} />\r\n                        </ListItem>\r\n                        <ListItem button key={3} onClick={() => history.push(routes[3])}>\r\n                            <ListItemIcon>{icons[3]}</ListItemIcon>\r\n                            <ListItemText primary={\"User Management\"} />\r\n                        </ListItem>\r\n\r\n\r\n                    </List>\r\n                    <Divider />\r\n\r\n                </Drawer>\r\n            </Router>\r\n            <main className={classes.content}>\r\n                <Toolbar />\r\n                <Typography paragraph>\r\n                    <div><center>This is Admin Dashboard Page</center></div>\r\n                </Typography>\r\n\r\n            </main>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default withRouter(Dashboard);","C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\pages\\Home.jsx",[],"C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\pages\\AddNews.jsx",["79","80","81","82","83","84","85","86"],"import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport { BrowserRouter as Router, Link, withRouter } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\nimport '../pages/style.css'\r\nimport SubmitButton from '../reuseableComponent/Button'\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n\r\n\r\nconst drawerWidth = 240;\r\nconst icons = [\r\n    <HomeIcon />,\r\n    <AddBoxIcon />,\r\n    <DeleteIcon />,\r\n    <PersonIcon />\r\n]\r\n\r\nconst routes = ['/admin/dashboard', '/admin/addnews', '/admin/deletenews', '/admin/usermanagement'];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n        color: theme.palette.text.primary\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: - drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n}));\r\n\r\nfunction AddNewsPage({ history }) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const [startDate, setStartDate] = useState(new Date());\r\n\r\n    return (\r\n\r\n        <div className={classes.root}>\r\n            <Router>\r\n                <CssBaseline />\r\n\r\n                <AppBar\r\n                    position=\"fixed\"\r\n                    className=\"appbar\"\r\n                    className={clsx(classes.appBar, {\r\n                        [classes.appBarShift]: open,\r\n                    })}\r\n                    style={{ backgroundColor: '#673ab7' }}\r\n                >\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={handleDrawerOpen}\r\n                            edge=\"start\"\r\n                            className={clsx(classes.menuButton, open && classes.hide)}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" noWrap>\r\n                            Admin Dashboard\r\n          </Typography>\r\n\r\n                    </Toolbar>\r\n                </AppBar>\r\n\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <div className={classes.drawerHeader}>\r\n                        <IconButton onClick={handleDrawerClose}>\r\n                            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <List>\r\n                        <ListItem button key={0} onClick={() => history.push(routes[0])}>\r\n                            <ListItemIcon>{icons[0]}</ListItemIcon>\r\n                            <ListItemText primary={\"Home\"} />\r\n                        </ListItem>\r\n                        <ListItem button key={1} onClick={() => history.push(routes[1])}>\r\n                            <ListItemIcon>{icons[1]}</ListItemIcon>\r\n                            <ListItemText primary={\"Add News\"} />\r\n                        </ListItem>\r\n                        <ListItem button key={2} onClick={() => history.push(routes[2])}>\r\n                            <ListItemIcon>{icons[2]}</ListItemIcon>\r\n                            <ListItemText primary={\"Delete News\"} />\r\n                        </ListItem>\r\n                        <ListItem button key={3} onClick={() => history.push(routes[3])}>\r\n                            <ListItemIcon>{icons[3]}</ListItemIcon>\r\n                            <ListItemText primary={\"User Management\"} />\r\n                        </ListItem>\r\n\r\n\r\n                    </List>\r\n                    <Divider />\r\n\r\n                </Drawer>\r\n\r\n            </Router>\r\n            <main className={classes.content} style={{ marginLeft: 150, marginRight: 100 }} >\r\n                <Toolbar />\r\n                <Typography paragraph>\r\n                    <div className=\"news-parent-div\">\r\n                        <div style={{ backgroundColor: '#673ab7', fontWeight: 'bold', boxShadow: '0 5px 8px 0 rgba(0, 0, 0, 0.5), 0 4px 20px 0 rgba(0, 0, 0, 0.19)', color: 'white', textShadow: '1px 1px 2px black, 0 0 25px blue, 0 0 5px darkblue', height: '50px', paddingTop: '9px', paddingBottom: '2px', paddingLeft: '9px' }}>\r\n\r\n                            Add News\r\n                        </div>\r\n                        <div className=\"div-content\">\r\n                            <form>\r\n                                <Grid container spacing={3}>\r\n\r\n                                    <Grid item sm={6}>\r\n                                        {/* <DatePicker selected={startDate} onChange={date => setStartDate(date)} /> */}\r\n                                        <TextField id=\"Date\" variant=\"outlined\" style={{ backgroundColor: 'white', width: '500px' }} type=\"date\" />\r\n                                    </Grid>\r\n                                    <Grid item sm={6}>\r\n                                        <TextField id=\"outlined-basic\" label=\"category\" style={{ width: 500 }} variant=\"outlined\"></TextField>\r\n                                    </Grid>\r\n                                </Grid><br></br>\r\n\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item sm={6}>\r\n                                        <TextField id=\"outlined-basic\" label=\"Title\" style={{ width: 500 }} variant=\"outlined\"></TextField>\r\n                                    </Grid>\r\n                                    <Grid item sm={6}>\r\n                                        <TextField id=\"outlined-basic\" label=\"Description\" style={{ width: 500 }} variant=\"outlined\"></TextField>\r\n                                    </Grid>\r\n                                </Grid><br></br>\r\n\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item sm={6}>\r\n                                        <TextField id=\"outlined-basic\" label=\"Refereces\" style={{ width: 500 }} variant=\"outlined\"></TextField>\r\n                                    </Grid>\r\n                                    <Grid item sm={6} spacing={2}>\r\n                                        <Button style={{ backgroundColor: '#8bc34a', fontWeight: 'bold', margin: 10 }}>Upload  Image   <CloudUploadIcon /></Button>\r\n                                        <Button style={{ backgroundColor: '#8bc34a', fontWeight: 'bold', margin: 10 }}>Upload  Video   <CloudUploadIcon /></Button>\r\n                                    </Grid>\r\n                                </Grid><br></br><br></br>\r\n                                <Button variant=\"contained\" id=\"button\" disableElevation type=\"submit\">Submit</Button>\r\n\r\n\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </Typography>\r\n\r\n\r\n            </main>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default withRouter(AddNewsPage);\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\pages\\Deletenews.jsx",["87","88"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme,lighten } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport { BrowserRouter as Router, withRouter } from \"react-router-dom\";\r\nimport EnhancedTable from '../reuseableComponent/DeleteTable'\r\n\r\n\r\n\r\n\r\n\r\nconst drawerWidth = 240;\r\nconst icons = [\r\n    <HomeIcon />,\r\n    <AddBoxIcon />,\r\n    <DeleteIcon />,\r\n    <PersonIcon />\r\n]\r\n\r\nconst routes = ['/admin/dashboard', '/admin/addnews', '/admin/deletenews', '/admin/usermanagement'];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n        color: theme.palette.text.primary\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        marginLeft: 240,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: - drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n}));\r\n\r\nfunction DeleteNewsPage({ history }) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n\r\n        <div className={classes.root}>\r\n            <Router>\r\n                <CssBaseline />\r\n\r\n                <AppBar\r\n                    position=\"fixed\"\r\n                    className={clsx(classes.appBar, {\r\n                        [classes.appBarShift]: open,\r\n                    })}\r\n                >\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={handleDrawerOpen}\r\n                            edge=\"start\"\r\n                            className={clsx(classes.menuButton, open && classes.hide)}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" noWrap>\r\n                            Admin Dashboard\r\n          </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <div className={classes.drawerHeader}>\r\n                        <IconButton onClick={handleDrawerClose}>\r\n                            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <List>\r\n                        <ListItem button key={0} onClick={() => history.push(routes[0])}>\r\n                            <ListItemIcon>{icons[0]}</ListItemIcon>\r\n                            <ListItemText primary={\"Home\"} />\r\n                        </ListItem>\r\n                        <ListItem button key={1} onClick={() => history.push(routes[1])}>\r\n                            <ListItemIcon>{icons[1]}</ListItemIcon>\r\n                            <ListItemText primary={\"Add News\"} />\r\n                        </ListItem>\r\n                        <ListItem button key={2} onClick={() => history.push(routes[2])}>\r\n                            <ListItemIcon>{icons[2]}</ListItemIcon>\r\n                            <ListItemText primary={\"Delete News\"} />\r\n                        </ListItem>\r\n                        <ListItem button key={3} onClick={() => history.push(routes[3])}>\r\n                            <ListItemIcon>{icons[3]}</ListItemIcon>\r\n                            <ListItemText primary={\"User Management\"} />\r\n                        </ListItem>\r\n\r\n\r\n                    </List>\r\n                    <Divider />\r\n\r\n                </Drawer>\r\n            </Router>\r\n            <main className={classes.content}>\r\n                <Toolbar />\r\n                <Typography paragraph>\r\n                    <div><EnhancedTable/></div>\r\n                </Typography>\r\n\r\n            </main>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default withRouter(DeleteNewsPage);","C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\pages\\UserManagement.jsx",["89","90"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme,lighten } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport { BrowserRouter as Router, withRouter } from \"react-router-dom\";\r\nimport EnhancedTable from '../reuseableComponent/UsersInfoTable'\r\n\r\n\r\n\r\n\r\n\r\nconst drawerWidth = 240;\r\nconst icons = [\r\n    <HomeIcon />,\r\n    <AddBoxIcon />,\r\n    <DeleteIcon />,\r\n    <PersonIcon />\r\n]\r\n\r\nconst routes = ['/admin/dashboard', '/admin/addnews', '/admin/deletenews', '/admin/usermanagement'];\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n        color: theme.palette.text.primary\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        marginLeft: 240,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: - drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n}));\r\n\r\nfunction UserManagementPage({ history }) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n\r\n        <div className={classes.root}>\r\n            <Router>\r\n                <CssBaseline />\r\n\r\n                <AppBar\r\n                    position=\"fixed\"\r\n                    className={clsx(classes.appBar, {\r\n                        [classes.appBarShift]: open,\r\n                    })}\r\n                >\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={handleDrawerOpen}\r\n                            edge=\"start\"\r\n                            className={clsx(classes.menuButton, open && classes.hide)}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" noWrap>\r\n                            Admin Dashboard\r\n          </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <div className={classes.drawerHeader}>\r\n                        <IconButton onClick={handleDrawerClose}>\r\n                            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <List>\r\n                        <ListItem button key={0} onClick={() => history.push(routes[0])}>\r\n                            <ListItemIcon>{icons[0]}</ListItemIcon>\r\n                            <ListItemText primary={\"Home\"} />\r\n                        </ListItem>\r\n                        <ListItem button key={1} onClick={() => history.push(routes[1])}>\r\n                            <ListItemIcon>{icons[1]}</ListItemIcon>\r\n                            <ListItemText primary={\"Add News\"} />\r\n                        </ListItem>\r\n                        <ListItem button key={2} onClick={() => history.push(routes[2])}>\r\n                            <ListItemIcon>{icons[2]}</ListItemIcon>\r\n                            <ListItemText primary={\"Delete News\"} />\r\n                        </ListItem>\r\n                        <ListItem button key={3} onClick={() => history.push(routes[3])}>\r\n                            <ListItemIcon>{icons[3]}</ListItemIcon>\r\n                            <ListItemText primary={\"User Management\"} />\r\n                        </ListItem>\r\n\r\n\r\n                    </List>\r\n                    <Divider />\r\n\r\n                </Drawer>\r\n            </Router>\r\n            <main className={classes.content}>\r\n                <Toolbar />\r\n                <Typography paragraph >\r\n                <EnhancedTable/>\r\n                        \r\n                   \r\n                </Typography>\r\n\r\n            </main>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default withRouter(UserManagementPage);","C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\reuseableComponent\\Header.jsx",[],"C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\reuseableComponent\\InputField.jsx",[],"C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\reuseableComponent\\Password.jsx",[],"C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\reuseableComponent\\Button.jsx",[],"C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\reuseableComponent\\UsersInfoTable.jsx",[],"C:\\Users\\pra12\\Documents\\GitHub\\Online-news-portail\\src\\reuseableComponent\\DeleteTable.jsx",[],["91","92"],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":22,"column":35,"nodeType":"99","messageId":"100","endLine":22,"endColumn":39},{"ruleId":"97","severity":1,"message":"98","line":22,"column":35,"nodeType":"99","messageId":"100","endLine":22,"endColumn":39},{"ruleId":"97","severity":1,"message":"101","line":25,"column":8,"nodeType":"99","messageId":"100","endLine":25,"endColumn":20},{"ruleId":"97","severity":1,"message":"102","line":26,"column":8,"nodeType":"99","messageId":"100","endLine":26,"endColumn":17},{"ruleId":"97","severity":1,"message":"103","line":29,"column":8,"nodeType":"99","messageId":"100","endLine":29,"endColumn":28},{"ruleId":"97","severity":1,"message":"104","line":30,"column":8,"nodeType":"99","messageId":"100","endLine":30,"endColumn":18},{"ruleId":"97","severity":1,"message":"105","line":120,"column":12,"nodeType":"99","messageId":"100","endLine":120,"endColumn":21},{"ruleId":"97","severity":1,"message":"106","line":120,"column":23,"nodeType":"99","messageId":"100","endLine":120,"endColumn":35},{"ruleId":"107","severity":1,"message":"108","line":131,"column":21,"nodeType":"109","endLine":133,"endColumn":24},{"ruleId":"97","severity":1,"message":"110","line":3,"column":31,"nodeType":"99","messageId":"100","endLine":3,"endColumn":38},{"ruleId":"111","severity":1,"message":"112","line":90,"column":9,"nodeType":"113","messageId":"114","endLine":90,"endColumn":19},{"ruleId":"97","severity":1,"message":"110","line":3,"column":31,"nodeType":"99","messageId":"100","endLine":3,"endColumn":38},{"ruleId":"111","severity":1,"message":"112","line":93,"column":9,"nodeType":"113","messageId":"114","endLine":93,"endColumn":19},{"ruleId":"93","replacedBy":"115"},{"ruleId":"95","replacedBy":"116"},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'SubmitButton' is defined but never used.","'Container' is defined but never used.","'AddCircleOutlineIcon' is defined but never used.","'DatePicker' is defined but never used.","'startDate' is assigned a value but never used.","'setStartDate' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'lighten' is defined but never used.","no-dupe-keys","Duplicate key 'marginLeft'.","ObjectExpression","unexpected",["117"],["118"],"no-global-assign","no-unsafe-negation"]